FROM ubuntu:20.04

# non-noninteractive and no output
ENV DEBIAN_FRONTEND noninteractive
ENV APT_QUIET "apt-get -yqq -o=Dpkg::Use-Pty=0"

RUN cd /tmp

RUN $APT_QUIET update && \
    $APT_QUIET install --no-install-recommends apt-utils && \
    $APT_QUIET upgrade && \
    $APT_QUIET install build-essential vim tmux htop iputils-ping unzip python3 python3-pip wget curl cron python3-matplotlib

# Java
RUN $APT_QUIET install default-jdk

# GeoServer
RUN wget https://sourceforge.net/projects/geoserver/files/GeoServer/2.21.2/geoserver-2.21.2-bin.zip && \
    mkdir -p /usr/share/geoserver-2.21.2 && \
    unzip geoserver-2.21.2-bin.zip -d /usr/share/geoserver-2.21.2 && \
    rm -f geoserver-2.21.2-bin.zip

# Python libs
RUN python3 -m pip install --upgrade pip setuptools wheel && \
    python3 -m pip install django whitenoise gunicorn django-mailbox numpy scipy sentinelsat gsconfig-py3 pandas

RUN wget http://archive.ubuntu.com/ubuntu/pool/universe/p/python-cycler/python-cycler_0.10.0-1_all.deb && \
    wget http://archive.ubuntu.com/ubuntu/pool/universe/m/matplotlib/python-matplotlib_2.1.1-2ubuntu3_amd64.deb
RUN $APT_QUIET install ./python-matplotlib_2.1.1-2ubuntu3_amd64.deb ./python-cycler_0.10.0-1_all.deb

# GDAL
RUN $APT_QUIET install software-properties-common
RUN add-apt-repository ppa:ubuntugis/ppa && \
    $APT_QUIET update  && \
    $APT_QUIET upgrade  && \
    $APT_QUIET install gdal-bin && \
    $APT_QUIET install libgdal-dev && \
    export CPLUS_INCLUDE_PATH=/usr/include/gdal && \
    export C_INCLUDE_PATH=/usr/include/gdal && \
    python3 -m pip install GDAL

# NGINX
# Does not work installing newest version in docker build process. Has to be done manually...
# Manually do https://askubuntu.com/questions/1389719/install-nginx-1-20-2-on-ubuntu-20-04
RUN $APT_QUIET install nginx

# CERTBOT (FOR SSL CERTIFICATE)
RUN $APT_QUIET install certbot python3-certbot-nginx

# Cython
RUN python3 -m pip install Cython

# HDF5
RUN $APT_QUIET install libhdf5-serial-dev netcdf-bin libnetcdf-dev && \
    python3 -m pip install h5py

# netCDF4
RUN python3 -m pip install netcdf4

# Extra setup
RUN mkdir /root/logs && touch /root/logs/cron.log /root/logs/access.log /root/logs/info.log
RUN rm /etc/localtime && ln -s /usr/share/zoneinfo/Europe/Oslo /etc/localtime

# service cron start
# tmux new-session -d -s "django" "cd /root/fram && python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py collectstatic --noinput && python3 manage.py runserver"
# tmux new-session -d -s "geoserver" "cd /root/fram && GEOSERVER_HOME=/usr/share/geoserver-2.21.2 /usr/share/geoserver-2.21.2/bin/startup.sh"
